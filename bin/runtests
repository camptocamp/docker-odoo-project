#!/bin/bash
#
# Run unit tests of local-src modules
#
# mainly used from Travis,
# it creates a database,
# if a cached dump of official and oca modules exists restore it
# otherwise install dependencies and create a dump to cache
# then install local addons
# runs tests on it and drops it.
#
# Arguments:
#   optional: name of the addons to test, separated by ,
#
# Environment variables:
#
# CREATE_DB_CACHE:
#   if set to "true", will create a dump named "odoo_test_$VERSION.dmp"
#
# LOAD_DB_CACHE:
#   if set to "false", will skip trying to reload cached dump named "odoo_test_$VERSION.dmp"
#
# SUBS_MD5:
#   value to tag the database dump. Will search for a dump named
#   "odoo_test_$SUBS_MD5.dmp" if not found it will create one.
#
set -e

# TODO: if we are not in TRAVIS, make a template then run tests on a copy
source db.sh
wait_postgres.sh

if [ -z $1 ]; then
    LOCAL_ADDONS=$(find ${LOCAL_SRC_DIR}/* -maxdepth 0 -type d -and -not -name server_environment_files -printf "%f\n" |
        awk -vORS=, '{print $1}' |
        sed 's/,$/\n/')
else
    LOCAL_ADDONS=$1
fi

CREATE_DB_CACHE=${CREATE_DB_CACHE:=false}
LOAD_DB_CACHE=${LOAD_DB_CACHE:=true}

LOCAL_SRC_DIR=${LOCAL_SRC_DIR:=/odoo/local-src}
CACHE_DIR=${CACHE_DIR:=/tmp/cachedb}

DEPS_ADDONS=$(list_dependencies.py "$LOCAL_ADDONS")

DB_NAME=${DB_NAME:=odoo_test}

echo "Create database"
createdb -O $DB_USER $DB_NAME

if [[ ! -z "$SUBS_MD5" ]]; then
    DUMP="$CACHE_DIR/odoo_test_$SUBS_MD5.dmp"
fi

echo "Submodule addons MD5 is: $SUBS_MD5"

DUMP_LOADED=false
if [ "$LOAD_DB_CACHE" != "false" ]; then
    db_restore $DUMP $DB_NAME
    DUMP_LOADED=$?
    if [ $DUMP_LOADED = 1 ]; then
        echo "Use restored dump with official/OCA modules"
    else
        echo "Reinstall all addons from scratch üê¢ üê¢ üê¢"
    fi
else
    echo "DB cache load disabled."
fi

if [ "$DUMP_LOADED" = 0 ]; then
    echo "üî®üî® Install official/OCA modules üî®üî®"
    odoo --stop-after-init --workers=0 --database $DB_NAME --log-level=warn --without-demo="" --db-filter=$DB_NAME -i ${DEPS_ADDONS}
    if [ "$CREATE_DB_CACHE" != "false" ]; then
        db_save $DB_NAME $DUMP
    fi
fi
echo "üîßüîß Install local-src modules üîßüîß"
odoo --stop-after-init --workers=0 --database $DB_NAME --test-enable --log-level=test --log-handler=":INFO" --without-demo="" --db-filter=$DB_NAME_TEST -i ${LOCAL_ADDONS}

dropdb ${DB_NAME}
